/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.9
 * Generated at: 2019-12-19 01:12:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.mysqlboard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import boardmysql.*;
import java.util.*;
import java.text.SimpleDateFormat;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {


int pageSize=10;
SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/view/color.jsp", Long.valueOf(1576547023352L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("\r\n");
 
 String bodyback_c="#e0ffff";
 String back_c="#8fbc8f";
 String title_c="#5f9ea0";
 String value_c="#b0e0e6";
 String bar="#778899";

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("   \r\n");
      out.write('\r');
      out.write('\n');

request.setCharacterEncoding("utf-8");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

String pageNum=request.getParameter("pageNum");//페이지 번호 받기
if(pageNum==null){//처음 list.jsp로 실행하면 pageNum없기때문에 이를 처리하기 위해
	pageNum="1";
}//if

int currentPage=Integer.parseInt(pageNum);//문자열을 정수로 변환 
int startRow=(currentPage-1)*pageSize+1;//페이지의 시작 글번호
int endRow=currentPage*pageSize;//페이지의 끝번호

int count=0;//글 갯수
int number=0;//글번호
List <BoardDTO>list=null;//dao로부터 데이터 받기 

BoardDAO dao = BoardDAO.getDao();//dao 객체 얻기 
count=dao.getArticlCount();//글 갯수 얻기 

if(count>0){//글이 존재할때만 
	list=dao.getList(startRow, pageSize);
  //                  시작위치           갯수
}//if

number=count-(currentPage-1)*pageSize;//보여줄 글번호

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write(" <head>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\">\r\n");
      out.write(" </head>\r\n");
      out.write(" <body>\r\n");
      out.write("  <h1><center>글목록(전체글):");
      out.print(count );
      out.write("</center></h1>\r\n");
      out.write("  \r\n");
      out.write("   <table width=\"80%\" align=\"center\">\r\n");
      out.write("     <tr>\r\n");
      out.write("      <td align=\"right\" bgcolor=\"");
      out.print(value_c );
      out.write("\">\r\n");
      out.write("        <a href=\"writeForm.jsp\">새글글쓰기</a>\r\n");
      out.write("      </td>\r\n");
      out.write("     </tr>\r\n");
      out.write("   </table>\r\n");
      out.write("   ");

    if(count==0){//글이 없으면
    
      out.write("\r\n");
      out.write("     <table width=\"70%\" align=\"center\">\r\n");
      out.write("     <tr>\r\n");
      out.write("      <td align=\"center\" bgcolor=\"");
      out.print(value_c );
      out.write("\">\r\n");
      out.write("                     게시판에 저장된 글이 없습니다\r\n");
      out.write("      </td>\r\n");
      out.write("     </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("    ");

    }else{//글이 있으면 
    
      out.write("\r\n");
      out.write("    <table width=\"80%\" align=\"center\" border=\"1\" cellpadding=\"3\">\r\n");
      out.write("     <tr>\r\n");
      out.write("      <td align=\"center\" width=\"100\">번호</td>\r\n");
      out.write("      <td align=\"center\" width=\"300\">글제목</td>\r\n");
      out.write("      <td align=\"center\" width=\"150\">글쓴이</td>\r\n");
      out.write("      <td align=\"center\" width=\"200\">작성일</td>\r\n");
      out.write("      <td align=\"center\" width=\"200\">조회수</td>\r\n");
      out.write("      <td align=\"center\" width=\"100\">ip</td>\r\n");
      out.write("     </tr>\r\n");
      out.write("    ");

    for(int i=0; i<list.size(); i++){
    	BoardDTO dto=(BoardDTO)list.get(i);
    	
      out.write("\r\n");
      out.write("    \t<tr height=\"30\">\r\n");
      out.write("    \t\r\n");
      out.write("\t\t\t<!--     \t글번호 -->\r\n");
      out.write("    \t  <td align=\"center\">");
      out.print(number-- );
      out.write("</td>\r\n");
      out.write("    \t\r\n");
      out.write("    \t\t");
      out.write("\r\n");
      out.write("    \t<td>\r\n");
      out.write("    \t");

    	//답글 들여 쓰기 계산
    	int wid=0;//변수
    	if(dto.getRe_level()>0){//답글이면
    		wid=5*dto.getRe_level();
    	
      out.write("\r\n");
      out.write("    \t<img src=\"../imags/level.gif\" width=\"");
      out.print(wid);
      out.write("\" height=\"16\">\r\n");
      out.write("    \t<img src=\"../imags/re.gif\">\r\n");
      out.write("    \t");

    	}else{//원글이면
    	
      out.write("\r\n");
      out.write("    \t<img src=\"../imags/level.gif\" width=\"");
      out.print(wid);
      out.write("\" height=\"16\">\r\n");
      out.write("    \t    \t");

    	}//else end--
    	
      out.write("\r\n");
      out.write("    \t");
      out.write("\r\n");
      out.write("    \t <a href=\"content.jsp?num=");
      out.print(dto.getNum());
      out.write("&pageNum=");
      out.print(currentPage);
      out.write("\">\r\n");
      out.write("    \t   ");
      out.print(dto.getSubject() );
      out.write("\r\n");
      out.write("    \t </a> \r\n");
      out.write("    \t ");

    	 //조횟수 20번 이상이면 hot.gif 표시하기
    	 if(dto.getReadcount()>20){
    		 
      out.write("\r\n");
      out.write("    \t\t <img src=\"../imags/hot.gif\" height=\"10\" border=\"0\">\r\n");
      out.write("    \t\t ");

    	 }//if
    	 
      out.write("\r\n");
      out.write("    \t </td>\r\n");
      out.write("    \t \r\n");
      out.write("    \t \r\n");
      out.write("    \t");
      out.write("\r\n");
      out.write("\t    <td align=\"center\">\r\n");
      out.write("\t      <a href=\"mailto:");
      out.print(dto.getEmail());
      out.write("\">\r\n");
      out.write("\t       ");
      out.print(dto.getWriter() );
      out.write("\r\n");
      out.write("\t     </a>\r\n");
      out.write("\t    </td>\r\n");
      out.write("\t\r\n");
      out.write("\t    <td align=center>");
      out.print(sdf.format(dto.getReg_date()));
      out.write("</td>\r\n");
      out.write("\t    <td align=center>");
      out.print(dto.getReadcount() );
      out.write("</td>\r\n");
      out.write("\t    <td align=center>");
      out.print(dto.getIp() );
      out.write("</td>\r\n");
      out.write("    \t</tr>\r\n");
      out.write("\r\n");
      out.write("    \t");

    }//for end
     
      out.write("\r\n");
      out.write("    </table>\r\n");
      out.write("     ");
	
    }//else end ---글이 있으면  끝
   
      out.write("\r\n");
      out.write("   \r\n");
      out.write("   ");
      out.write("\r\n");
      out.write("   ");

   if(count>0){//글이 있으면 
  
      out.write("\r\n");
      out.write("  <table width=\"70%\" align=\"center\">\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t<td align=\"center\">\r\n");
      out.write("\t");

	int pageCount=count/pageSize+(count%pageSize==0?0:1);
	//int pageCount=(int)(Math.ceil(count/pageSize));
	
	int pageBlock=10;//블럭당 페이지 수 10개
	int startPage=(int)(currentPage/pageBlock)*10+1;//시작 페이지 
	int endPage=startPage+pageBlock-1;//끝 페이지 
	
	if(endPage>pageCount){//에러 방지를 위해서
		endPage=pageCount;
	}
	
	//이전블럭
	if(startPage>10){
	
      out.write("\r\n");
      out.write("\t<a href=\"list.jsp?pageNum=");
      out.print(startPage-10);
      out.write("\">[이전블럭]</a>\r\n");
      out.write("\t");

	}//if
	
	//page 처리 
	
	for(int i=startPage; i<=endPage; i++){
	
      out.write("\r\n");
      out.write("\t<a href=\"list.jsp?pageNum=");
      out.print(i);
      out.write("\">\r\n");
      out.write("\t[");
      out.print( i);
      out.write("]\r\n");
      out.write("\t</a>\r\n");
      out.write("\t");

	}//for end
	
	
	//다음 블럭
	if(endPage<pageCount){
	
      out.write("\r\n");
      out.write("\t<a href=\"list.jsp?pageNum=");
      out.print(startPage+10);
      out.write("\">[다음블럭]</a>\r\n");
      out.write("\t");

	}//if
	
      out.write("\r\n");
      out.write("\t</td>\r\n");
      out.write("\t</tr> \r\n");
      out.write("  </table>\r\n");
      out.write("\t   ");

   }//if end 글이 존재 할때
   
   
      out.write("\r\n");
      out.write(" </body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
