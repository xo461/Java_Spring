/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.9
 * Generated at: 2019-12-20 04:31:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._02_005fjstl_005fmsg;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Locale;

public final class _02_005flocale_005fall_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1576723558671L));
    _jspx_dependants.put("jar:file:/D:/_jsp/jsp_work/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/05_jstl/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1090214156000L));
    _jspx_dependants.put("jar:file:/D:/_jsp/jsp_work/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/05_jstl/WEB-INF/lib/standard.jar!/META-INF/fmt.tld", Long.valueOf(1090214156000L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

Locale[] list = DateFormat.getAvailableLocales();
ArrayList<String> aryLocale = new ArrayList<String>();

for (int i = 0; i < list.length; i++) {			
	aryLocale.add(list[i].toString());		
}//for

Collections.sort(aryLocale);
Locale locale = null;	
String[] arrData = null; 

for (String data : aryLocale) {
	if (data.indexOf("_") > -1) {//index 값이 존재 하면 				
		arrData = data.split("_");//_ 문자로 구분하는 파싱을 합니다
		locale = new Locale(arrData[0], arrData[1]);//생성		
	} else {	
		locale = new Locale(data);//생성
	}//else	
	//출력
	out.println(locale.toString() + ","	
	+ locale.getDisplayLanguage() + ","	
	+ locale.getDisplayCountry()+"<br>");//+", "					
	//+ locale.getISO3Language()+"<br>"); //+ ","					
	//+ locale.getISO3Country());		
}//for 		
Locale localeTest = new Locale("en", "US");//생성	.. 미국
out.println(">>>" + localeTest.getDisplayName());//확인,영어,미국


    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
