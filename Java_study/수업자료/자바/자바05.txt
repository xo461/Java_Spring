자바의 변수
- 기본형 - 길이 고정 : 데이터
 . boolen(논리) - 1byte(8bit) - true, false
 . 숫자 - 정수(소숫점의 위치가 정해져 있다.) : 부호 + 숫자.
          byte - short - <int> - long
        - 실수(소수점 있다.) : 부호 + 지수 + 숫자
          float - <double>
          123.456 -> 1.23456 * 10 ** 2
          0.000123456 -> 1.23456 * 10 ** -4
   * 음수 표현 : 부호+절대값, 1의보수(1<->0), 2의보수(1의보수+1)
 . char(문자) - 2byte : 숫자로 저장한다(마이너스가 없다.) A - 65
- 참조형 - 길이 가변 : 주소
 . 기본형 변수[] : 배열, 클래스, 컬렉션, Map
 . null : 주소값이 없다.

= 캐스팅 : 형변환 : 자동형변환 - 작 -> 큰(관련이 있는 형태)
   강제형변환 - 큰 -> 작 : (변환형) 변수

javac Test.java
java Test 12 20

public static void main(String[] args){ ~~~ }

package - 자바 프로그램의 위치
public class Test{~~}

자바 프로그램 작성 -> 컴파일 : class -> HDD
main memory 작업 키워드
static : 자동 -> Class명.main()
new : 수동 -> 프로그램으로 작성 -> 재사용하려면 변수 저장 - 참조형

10 12
args[0] = "10";
args[1] = "12";

연산자
++a:선증가  a++: 후증가
/: 나누기 -> int / int -> int :  소수점을 없어진다.
% : 나머지 : 배수 처리

a = a + 1;
a += 1;
a++;


1 : true
0 : false

and : &, && -> 둘다 true 일때 true
a:   0   0    1   1
b:   0   1    0   1
a&b: 0   0    0   1

& : 0 & 0 -> 0 : 앞에 값과 뒤을 함께 확인함.
--> 앞에 것이 0이면 뒤에 것은 무의미하다.
&& : 0 & 0 -> 0 : 앞에 값이 0이면 뒤에 것은 확인하지 않는다.

Student - stdNo, name
Student std1 = null;
if(std1 != null & std1.stdNo == 10001) -> 오류
if(std1 != null && std1.stdNo == 10001) -> 처리

or : |, || -> 둘중에 하나가 true이면  true가 된다.
a:   0   0    1   1
b:   0   1    0   1
a|b: 0   1    1   1
| : 앞에 것이 true이더라고 뒤에 것을 확인
|| : 앞에 것이 true이면 뒤에 것은 확인하지 않는다.


비트연산 1,0 -> &, | ==> 처리문 안에 있다. a<<2
논리연산 T,F -> &, |, &&, || ==> 조건 안에 있다.










