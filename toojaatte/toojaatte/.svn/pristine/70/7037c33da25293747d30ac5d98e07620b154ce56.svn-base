package com.toojaatte.news.controller;

import java.util.HashMap;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.toojaatte.news.dto.News_repDTO;
import com.toojaatte.news.service.NewsCommentService;
import com.toojaatte.util.page.PageObject;

@Controller
@RequestMapping("/ncomment")
public class NewsCommentController {

	@Inject
	NewsCommentService ncService;
	
	@RequestMapping("/list.do")
	@ResponseBody
	public Map<String, Object> nCommentList (int nno, String id, Model model, PageObject pageObject) throws Exception{
		System.out.println("NewsCommentController.nCommentList().id: " + id);
		System.out.println("NewsCommentController.nCommentList().nno: " + nno);
		Map<String, Object> map = new HashMap<String, Object>();
		
		//댓글리스트
		map.put("nclist", ncService.nCommentList(nno, pageObject));
		
		//로그인시에만 내가 댓글에 좋아요/싫어요한 여부 가져오기
		if (id!=null) {
			map.put("nclikelist", ncService.myLikeList(nno, id));
		}
		System.out.println("NewsCommentController.nCommentList().map: " + map);
		return map;
	}

	@RequestMapping("/insert.do")
	@ResponseBody
	public int nCommentInsert(News_repDTO dto) throws Exception {
		System.out.println("newsCommentController.insertAComment().넘어오는값:" + dto);
		return ncService.commentInsert(dto);
	}

	@RequestMapping("/update.do") // 댓글 수정
	@ResponseBody
	public int bCommentUpdate(News_repDTO dto) throws Exception {
		return ncService.commentUpdate(dto);
	}

	@RequestMapping("/delete/{rep_no}.do") // 댓글 삭제
	@ResponseBody
	// @pathvariable: bcoment/delete/댓글번호.do 주소에 있는 변수(댓글번호) 받는것. 이름 같으면 맵핑된다.
	public int bCommentDelete(@PathVariable int rno) throws Exception {
		return ncService.commentDelete(rno);
	}
}
