package com.cafeatte.main;

import java.io.PrintWriter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.cafeatte.main.Controller;
import com.cafeatte.main.Execute;
import com.cafeatte.main.Service;
import com.cafeatte.member.dto.LoginDTO;

public class AjaxController implements Controller {

	private Service memberIdCheckService;
	private Service memberCheckNewPwService;
	private Service favoriteService;

	public void setMemberIdCheckService(Service memberIdCheckService) {
		this.memberIdCheckService = memberIdCheckService;
	}
		
	public AjaxController() {}
	
	public AjaxController(Service memberIdCheckService, Service memberCheckNewPwService, Service favoriteService) {
		this.memberIdCheckService = memberIdCheckService;
		this.memberCheckNewPwService = memberCheckNewPwService;
		this.favoriteService = favoriteService;
	}
	
	@Override
	public String execute(HttpServletRequest request, HttpServletResponse response, String uri) throws Exception {

		// 서버에서 클라이언트 방향으로 데이터를 전송하기 위한 객체
		response.setCharacterEncoding("UTF-8");
		PrintWriter out = response.getWriter();
		String idCheck = "";
		String checkNewPw = "";
		HttpSession session = request.getSession();
		switch(uri) {
		case "/ajax/idCheck.do":
			System.out.println("ajaxController.execute.ajax/idCheck.do");
			// 서비스를 갔다가 DB에서 확인한 결과로 클라이언트에 보낼 내용을 결정한다.
			idCheck = (String) Execute.service(memberIdCheckService, request.getParameter("id"));
			System.out.println("idCheck in execute ajaxcontroller" + idCheck);
			if(idCheck == null) {
				out.print("<span style='color:blue'>사용 가능한 아이디입니다.</span>");
			} else if(idCheck != null) {
				out.print("<span style='color:red'>이미 존재하는 아이디로 사용이 불가합니다.</span>");
			}
//			out.print("/ajax/idCheck.do 실행");
			break;
		case "/ajax/checkNewPw.do":
			System.out.println("ajaxController.execute.ajax/checkNewPw.do");
			LoginDTO dto = (LoginDTO) session.getAttribute("login");
			checkNewPw = (String) Execute.service(memberCheckNewPwService, dto.getId(), request.getParameter("pw"));
			if(checkNewPw != null) {
				out.print("<span style='color:red'>현재와 동일한 비밀번호로 변경할 수 없습니다.</span>");
			}
			break;
		case "/ajax/checkStar.do":
			System.out.println("ajaxController.execute.ajax/checkStar.do");
			int no = Integer.parseInt(request.getParameter("no"));
			String id = request.getParameter("id");
			int vr = Integer.parseInt(request.getParameter("vr"));
			System.out.println(no);
			System.out.println(id);
			System.out.println(vr);
			Execute.service(favoriteService, no, id, vr);
			break;
		}
		// TODO Auto-generated method stub
		out.close();
		return null;
	}

}
