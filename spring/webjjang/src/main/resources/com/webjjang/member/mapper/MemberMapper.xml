<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.webjjang.member.mapper.MemberMapper">
	<!-- 리스트 -->
	<select id="list" resultType="com.webjjang.member.dto.MemberDTO">
		select * from (
		select rownum rnum, id, name, gender, birth, tel, state, photo, gradeNo, gradeName
		from (
		select m.id, m.name, m.gender, m.birth, m.tel, m.state,
 			m.photo, m.gradeNo, g.gradeName
		from member m, grade g
		where 1=1 
		<if test="word != null and word != ''.toString()">
			and (1=0
			<include refid="searchCondition" />
			)
		</if>
		and (m.gradeNo = g.gradeNo)
		order by id asc)
		)
		where rnum between #{startRow} and #{endRow}
	</select>

	<!-- 데이터총개수 가져오기: 검색어로 필터링되면 된대로 개수 가져오기 -->
	<select id="getTotalRow" resultType="java.lang.Integer">
		select count(*) from member
		<if test="word != null and word != ''.toString()">
		 where (1=0
		<include refid="searchCondition" />
		)
		</if>
	</select>

	<!-- 검색에 필요한 조건 -->
	<!-- sql태그: 다른 태그에 삽입해서 재사용(include태그) -->
	<sql id="searchCondition">
		<!-- mybatis에서 문자열이나 문자 데이터는 "'" 사용하는데 회원자가 하나인 경우 char로 취급 -> .toString()함수를 통해 문자열로 바꿔줘야함. -->
		<!-- %word% 앞뒤에 무슨 내용이 오든 안에 word가 있으면. -->
		<!-- 동적쿼리. t가 있으면 안에 쿼리 적용 -->
		<if test="key.toString().indexOf('t')>=0">
			or title like '%' || #{word} || '%'
		</if>
		<if test="key.toString().indexOf('c')>=0">
			or content like '%' || #{word} || '%'
		</if>
		<if test="key.toString().indexOf('w')>=0">
			or writer like '%' || #{word} || '%'
		</if>
	</sql>

	<!-- 회원쓰기 -->
	<!-- #중괄호가 물음표로 바꿔치기된다.jsp로 넘어갈떄는 dto.으로 넘어간다. -->
	<insert id="write">
		insert into member(no, title, content, writer, pw)
		values(member_seq.nextval, #{title}, #{content}, #{writer}, #{pw})
	</insert>

	<!-- 회원보기 -->
	<!-- dto 모델과 똑같이 써야 한다. -->
	<select id="view" resultType="com.webjjang.member.dto.MemberDTO">
		select no, title, content, writer, writeDate, hit
		from member where no = #{no}
	</select>

	<!-- 회원보면 조회수 1 증가 --><!-- trigger는 데이터가 변경되야 처리가능한 반면 회원보기는 데이터 변경은 아니므로 db딴에서는 처리 못하고 java딴에서 
		처리한다. -->
	<update id="increaseHit">
		update member set hit = hit + 1
		where no = #{no}
	</update>

	<!-- 회원수정 : 본인회원만 수정가능 pw 확인 -->
	<update id="update">
		update member
		set title = #{title}, content = #{content}, writer = #{writer}
		where no = #{no} and pw = #{pw}
	</update>

	<!-- 회원삭제 -->
	<delete id="delete">
		delete from member where no = #{no} and pw = #{pw}
	</delete>
	
	<!-- login -->
	<select id="login" resultType="com.webjjang.member.dto.LoginDTO">
		select m.id, m.name, m.photo, m.newMsgCnt, m.gradeNo, g.gradeName
		from member m, grade g
		where (id = #{id} and pw = #{pw})
		and (m.gradeNo = g.gradeNo) 
	</select>

</mapper>