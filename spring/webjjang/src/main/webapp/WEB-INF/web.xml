<?xml version="1.0" encoding="UTF-8"?>
<!-- 아래 servlet version에 맞추어 바꾼다. -->
<web-app version="3.1" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_3.1.xsd">

	<!-- The definition of the Root Spring Container shared by all Servlets 
		and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/root-context.xml</param-value>
	</context-param>

	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	<!-- Processes application requests -->
	<!-- servlet.DispatcherServlet가 frontcontroller의 역할을 한다. Frameworkservlet상속받음. -->
	<!-- 들어온 request가 web.xml에 url-pattern태그에 등록된 거라면 DispatcherServlet이 그 요청을 
		가로챈다. -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml
			</param-value>
		</init-param>
		<!-- 404 error처리위해 추가 -->
		<init-param>
			<param-name>throwExceptionIfNoHandlerFound</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern><!-- 요기에 해당하는 request만 DispatcherServlet이 가로채서 
			handlermapping으로 보내 해당 요청을 처리할 수 있는 controller를 찾는다. -->
	</servlet-mapping>

	<!-- springFramework에서 한글처리 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 레이아웃 잡는 sitemesh library등록.(버전을 잘 맞추어야 한다. 현재 2.4.2버전 사용) 필터쪽에서 분해하고 다시 조립하므로  web.xml에 filter에서 등록해야함 -->
	<filter>
		<filter-name>sitemesh</filter-name><!-- 필터name은 바꿔도 무방함 -->
		<!-- /WEB-INF/sitemesh.xml을 찾아서 실행할 데이터로 사용 -->
		<filter-class>
			com.opensymphony.sitemesh.webapp.SiteMeshFilter
		</filter-class>
		
	</filter>
	<filter-mapping>
		<filter-name>sitemesh</filter-name>
		<!-- url패턴: 1.확장자기반: *.확장자    2. 위치기반 . 두종류를 섞으면 안된다.-->
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
</web-app>
