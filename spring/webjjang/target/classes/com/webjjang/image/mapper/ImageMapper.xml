<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 리스트 -->
<!-- 중복을 배제하기 위해 namespace설정한다. 그렇지않으면 프로그램돌때 TimeMapper이름이중복되면 충돌이 일어날 수있다. -->
<mapper namespace="com.webjjang.image.mapper.ImageMapper">
	<select id="list" resultType="com.webjjang.image.dto.ImageDTO">
		select * from (
		select rownum rnum, no, title, id, name, writeDate, fileName
		from (
		select i.no, i.title, i.id, m.name, i.writeDate, i.fileName
		from image i, member m
		where
		<!-- 동적쿼리if. if 문자열이 들어오는 경우에만 안에 쿼리 넣는다.include -->
		<if test="word != null and word != ''.toString()">
			1=0
			<include refid="searchCondition" />
			)
			and
		</if>
		<!-- join 조건은 필수: if문밖에 위치. -->
		(i.id = m.id)
		order by i.no desc
		)
		)
		where rnum between #{startRow} and #{endRow}
	</select>
	<!-- 데이터총개수 가져오기: 검색어로 필터링되면 된대로 개수 가져오기 -->
	<select id="getTotalRow" resultType="java.lang.Integer">
		select count(*) from image
		<if test="word != null and word != ''.toString()">
		 where (1=0
		<include refid="searchCondition" />
		)
		</if>
	</select>

	<!-- 검색에 필요한 조건 -->
	<!-- sql태그: 다른 태그에 삽입해서 재사용(include태그) -->
	<sql id="searchCondition">
		<!-- mybatis에서 문자열이나 문자 데이터는 "'" 사용하는데 글자가 하나인 경우 char로 취급 -> .toString()함수를 통해 문자열로 바꿔줘야함. -->
		<!-- %word% 앞뒤에 무슨 내용이 오든 안에 word가 있으면. -->
		<!-- 동적쿼리. t가 있으면 안에 쿼리 적용 -->
		<if test="key.toString().indexOf('t')>=0">
			or title like '%' || #{word} || '%'
		</if>
		<if test="key.toString().indexOf('c')>=0">
			or content like '%' || #{word} || '%'
		</if>
		<if test="key.toString().indexOf('i')>=0">
			or id like '%' || #{word} || '%'
		</if>
	</sql>

	<!-- 글쓰기 -->
	<insert id="write">
		insert into image(no, title, content, id, fileName)
		values(image_seq.nextval, #{title}, #{content}, #{id}, #{fileName})
	</insert>

	<!-- 글보기 -->
	<select id="view" resultType="com.webjjang.image.dto.ImageDTO">
		select no, title, content, id, name, writeDate, fileName
		from image where no = #{no}
	</select>

	<!-- 글수정 : id로 본인확인(로그인처리) -->
	<update id="update">
		update image
		set title = #{title}, content = #{content}
		where no = #{no} and id = #{id}
	</update>
	
	<!-- 이미지수정 -->
	<update id="updateFile">
	
	</update>

	<!-- 글삭제 -->
	<delete id="delete">
		delete from image where no = #{no} and id = #{id}
	</delete>

</mapper>