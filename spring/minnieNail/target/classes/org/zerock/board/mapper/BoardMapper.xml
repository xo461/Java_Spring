<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 리스트 -->
<!-- 중복을 배제하기 위해 namespace설정한다. 그렇지않으면 프로그램돌때 TimeMapper이름이중복되면 충돌이 일어날 수있다. -->
<mapper namespace="org.zerock.board.mapper.BoardMapper">
	<!-- TimeMapper.java 인터페이스의 메서드와 같은 이름을 id로 써야 인식된다. 리턴타입은 스트링으로 맞춰준다. 그럼자바에서 
		스트링으로 쓴다. 태그안에 sql문장을 쓴다. 참고로 dual은 오라클에서 기본 제공되는 테이블로 간단한 테스트를 할때 사용할수있다. -->
	<!-- 쿼리문: 정렬해서가져오고 - 글번호 붙이고 - 1부터 10까지 가져온다. -->
	<!-- resultType: 리스트, 글보기에서 select쿼리로 가져온 결과를 Java의 어떤 타입으로 변환하여 반환할지 지정 -->
	<select id="list" resultType="org.zerock.board.dto.BoardDTO">
		select * from (
		select rownum rnum,
		no, title, writer, writeDate, hit
		from (
		select no, title, writer,
		writeDate, hit
		from board2
		order by no desc
		)
		)
		where rnum between 1 and 10
	</select>

	<!-- 글쓰기 -->
	<!-- #중괄호가 물음표로 바꿔치기된다.jsp로 넘어갈떄는 dto.으로 넘어간다. -->
	<insert id="write" parameterType="org.zerock.board.dto.BoardDTO">
		<!-- 여기에 글번호가 먼저 생성되어야 boardfile에서 받아서 삽입가능하다. -->
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			SELECT BOARD2_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		insert into board2(no, title,
		content, writer)
		values(#{no}, #{title}, #{content},
		#{writer})
	</insert>

	<!-- FileUpload -->
	<insert id="insertFile" parameterType="java.util.HashMap">
		insert into boardFile (file_no, NO, ORG_FILE_NAME, STORED_FILE_NAME,
		FILE_SIZE)
		values(boardFile_seq.nextval, #{NO}, #{ORG_FILE_NAME},
		#{STORED_FILE_NAME}, #{FILE_SIZE})
	</insert>

	<!-- 글보기 -->
	<select id="view" resultType="org.zerock.board.dto.BoardDTO">
		select no, title, content, writer,
		writeDate , hit
		from board2 where no = #{no}
	</select>
	
	<!-- FileView -->
	<select id="fileView" ></select>

	<!-- 글수정 -->
	<update id="update">
		update board2
		set title = #{title}, content =
		#{content}, writer = #{writer}
		where no = #{no}
	</update>

	<!-- 글삭제 -->
	<delete id="delete">
		delete from board2
		where no = #{no}
	</delete>
	
	

</mapper>